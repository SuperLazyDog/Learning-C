//
//  Queue.h
//  Basic Review
//
//  Created by 徐伟达 on 2017/6/29.
//  Copyright © 2017年 徐伟达. All rights reserved.
//

#ifndef Queue_h
#define Queue_h

#include <stdio.h>
#include <stdlib.h>
#include "Bool.h"
#include "MemorySet.h"

//---------------------------------------------------------------------------
//                                  笔记
//---------------------------------------------------------------------------
/*---------------------------------------------------------------------------
 */

//---------------------------------------------------------------------------
//                                堆(Queue)
//---------------------------------------------------------------------------
//-------------------------------------------------------
//                       类型定义
//-------------------------------------------------------
//------------------------------
//实际使用时候改变这个定义     散式哈希表处理的数据类型
typedef int Queue_Data;
//------------------------------
typedef int INT;
typedef INT SIZE, LENGTH;
typedef SIZE Size;
typedef LENGTH Length;
typedef INT Capacity;
typedef INT POINTER;


typedef struct {
    Capacity max;
    SIZE num;
    POINTER front;
    POINTER rear;
    Queue_Data *queueList;
} Queue;

//-------------------------------------------------------
//                     需要自定义的函数
//-------------------------------------------------------
//---------------------------------------------
//                  数据对比函数
//---------------------------------------------
Bool compareData_Queue(const Queue_Data *ldata, const Queue_Data *rdata);//测试专用
//---------------------------------------------
//                  输出格式
//---------------------------------------------
Bool showData_Queue(Queue_Data *data); //测试专用

//-------------------------------------------------------
//                     管理测试的函数
//-------------------------------------------------------
void queueTest(void);

//-------------------------------------------------------
//                       初始化
//-------------------------------------------------------
Queue *initialize_Queue(Queue *queue, Capacity max); // 初始化堆

//-------------------------------------------------------
//                       插入数据
//-------------------------------------------------------
Bool enque_Queue(Queue *queue, Queue_Data *data);

//-------------------------------------------------------
//                       取出数据
//-------------------------------------------------------
Bool deque_Queue(Queue *queue, Queue_Data *temp);

//-------------------------------------------------------
//                        Peek
//-------------------------------------------------------
Bool peek_at_Queue(const Queue *queue, Queue_Data *temp);

//-------------------------------------------------------
//                        Clear
//-------------------------------------------------------
Bool clear_Queue(Queue *queue);

//-------------------------------------------------------
//                       获取容量
//-------------------------------------------------------
Capacity getCapacity_From_Queue(const Queue *queue);

//-------------------------------------------------------
//                      获取数据数
//-------------------------------------------------------
Size getCount_Of_Queue_Data(const Queue *queue);

//-------------------------------------------------------
//                       是否空
//-------------------------------------------------------
Bool isEmpty_Queue(const Queue *queue);

//-------------------------------------------------------
//                       是否满
//-------------------------------------------------------
Bool isFull_Queue(const Queue *queue);

//-------------------------------------------------------
//                       搜索数据
//-------------------------------------------------------
POINTER search_In_Queue(const Queue *queue, const Queue_Data *data,
                        Bool compareData_Queue(const Queue_Data *ldata, const Queue_Data *rdata));

//-------------------------------------------------------
//                        表示
//-------------------------------------------------------
Bool showQueue(const Queue *Queue,  Bool showData_Queue(Queue_Data *data));

//-------------------------------------------------------
//                        收尾
//-------------------------------------------------------
Bool terminate_Queue(Queue *queue);

#endif /* Queue_h */
