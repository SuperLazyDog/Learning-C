//
//  List.h
//  Basic Review
//
//  Created by 徐伟达 on 2017/6/18.
//  Copyright © 2017年 徐伟达. All rights reserved.
//

#ifndef List_h
#define List_h

#include <stdio.h>
#include <stdlib.h>
#include "Bool.h"
#include "MemorySet.h"

//---------------------------------------------------------------------------
//                                  检索
//---------------------------------------------------------------------------
//-------------------------------------------------------
//                       类型定义
//-------------------------------------------------------
typedef int type; //自定义任意类型
#define _TYPE_INT

typedef struct __node { //节点
    type data;
    struct __node *next;
} Node;

typedef struct { //节点管理器
    Node *head; //最开头的节点
    Node *crnt; //现在的节点
} List;

//-------------------------------------------------------
//                       测试
//-------------------------------------------------------
void listTest();

//-------------------------------------------------------
//                        初始化
//-------------------------------------------------------
void initialize(List *list);

//-------------------------------------------------------
//                         检索
//-------------------------------------------------------
Node *searchNode(List *list, const type *data, bool compare(const type *left, const type *right));

//-------------------------------------------------------
//                       开头插入
//-------------------------------------------------------
bool insertInHead(List *list, const type *data);

//-------------------------------------------------------
//                        末尾插入
//-------------------------------------------------------
bool insertInTail(List *list, const type *data);

//-------------------------------------------------------
//                      删除头节点
//-------------------------------------------------------
bool deleteHead(List *list);

//-------------------------------------------------------
//                      删除尾节点
//-------------------------------------------------------
bool deleteTail(List *list);

//-------------------------------------------------------
//                    删除当前所在节点
//-------------------------------------------------------
bool deleteCurrent(List *list);

//-------------------------------------------------------
//                      删除所有节点
//-------------------------------------------------------
bool clearAll(List *list);

//-------------------------------------------------------
//                      表示当前节点
//-------------------------------------------------------
bool showCurrent(List *list, void print(type data), bool needNewLine);

//-------------------------------------------------------
//                      表示所有节点
//-------------------------------------------------------
bool showAll(List *list, void print(type data));

#endif /* List_h */
